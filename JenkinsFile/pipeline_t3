pipeline {
    agent any
    stages {
        stage ('Clone') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'my_user', url: 'https://github.com/anetmex/simple-rest-client']]])
            }
        }

        stage ('Artifactory configuration') {
            steps {
                rtServer (
                    id: "artifactory-server",
                    url: "http://78.27.132.144:8082/artifactory",
                    credentialsId: "artifactory_admin"
                )

                rtMavenDeployer (
                    id: "MAVEN_DEPLOYER",
                    serverId: "artifactory-server",
                    releaseRepo: "libs-release-local",
                    snapshotRepo: "libs-snapshot-local"
                )

                rtMavenResolver (
                    id: "MAVEN_RESOLVER",
                    serverId: "artifactory-server",
                    releaseRepo: "libs-release",
                    snapshotRepo: "libs-snapshot"
                )
            }
        }

        stage ('Exec Maven') {
            steps {
                rtMavenRun (
                    tool: 'maven-server', // Tool name from Jenkins configuration
                    pom: 'pom.xml',
                    goals: 'clean install -Dv=${BUILD_NUMBER}',
                    buildNumber: '${BUILD_NUMBER}',
                    deployerId: "MAVEN_DEPLOYER",
                    resolverId: "MAVEN_RESOLVER"
                )
            }
        }

        stage ('Publish build info') {
            steps {
                rtPublishBuildInfo (
                    serverId: "artifactory-server"
                )
            }
        }

        stage ('Deploy latest version') {
            steps {
                ansiblePlaybook(
                    credentialsId: 'ubuntu_key',
                    disableHostKeyChecking: true,
                    installation: 'Ansible',
                    inventory: '/var/lib/jenkins/workspace/simple-ci-deploy-with-roles/ansible/inventory/staging.ini',
                    playbook: '/var/lib/jenkins/workspace/simple-ci-deploy-with-roles/ansible/deploy_app.yml',
//                    sudo: true
            }
        }
    }
}