pipeline {
    agent any
    stages {

        stage("CHECKOUT_ANSIBLE") {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']],
                doGenerateSubmoduleConfigurations: false,
                extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'ansible']],
                submoduleCfg: [],
                userRemoteConfigs: [[credentialsId: 'my_user', url: 'https://github.com/anetmex/ansible']]])
            }
        }
        stage ('Deploy latest version of app on all hosts') {
        parallel {
        stage ('Deploy latest version on ubuntu') {
            steps {
                ansiblePlaybook(
                    credentialsId: 'deploy',
                    disableHostKeyChecking: true,
                    installation: 'Ansible',
                    //inventory: '/var/lib/jenkins/workspace/deploy_app/ansible/ansible/inventory/staging.ini',
                    inventory: '${WORKSPACE}/ansible/ansible/inventory/staging.ini',
                    playbook: '${WORKSPACE}/ansible/ansible/deploy_app.yml',
                    extraVars: [
                        build_number:'${version_VERSION}'
                        ]
//                    sudo: true
                )
            }
        }
        stage ('Deploy latest version on rhel') {
            steps {
                ansiblePlaybook(
                    credentialsId: 'deploy',
                    disableHostKeyChecking: true,
                    installation: 'Ansible',
                    inventory: '${WORKSPACE}/ansible/ansible/inventory/staging.ini',
                    playbook: '${WORKSPACE}/ansible/ansible/deploy_app.yml',
                    extraVars: [
                        build_number:'${version_VERSION}'
                        ]
//                    sudo: true
                )
            }
        }
        }
        }
    }
}